{{ $ns := .Vars.kube.namespace -}}
{{ $svc := .Vars.kube.service.name -}}
{{ $nssvc := printf "%s-%s" $ns $svc -}}
loglevel: DEBUG
logoutput: STDOUT
addr: ':8080'
baseurl: /api
maxreqsize: 2M
maxheadersize: 1M
maxconnread: 5s
maxconnheader: 2s
maxconnwrite: 5s
maxconnidle: 5s
alloworigins: []
allowpaths:
  - '^/api/oauth/(token|userinfo|jwks)$'
routerewrite:
  - host: go.governor.dev.localhost:8080
    methods: ['GET']
    pattern: '^/([A-Za-z0-9_-]{2,}(?:/image)?)$'
    replace: /api/courier/link/id/$1
  - host: governor.dev.localhost:8080
    methods: ['GET']
    pattern: '^\/\.well-known\/openid-configuration$'
    replace: /api/oauth/openid-configuration
proxies: []
vault:
  addr: http://vault.vault.svc.cluster.local:8200
  k8s:
    auth: true
    role: {{ $nssvc }}
setupsecret: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/setup
database:
  auth: {{ .Vars.vault.dbmount }}/creds/{{ $ns }}-postgres-rw
  dbname: postgres
  host: postgres.{{ $ns }}.svc.cluster.local
  port: 5432
  sslmode: disable
  hbinterval: 5s
  hbmaxfail: 5
kvstore:
  auth: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvprefix }}{{ . }}/{{ end }}{{ $ns }}/redis
  dbname: 0
  host: redis.{{ $ns }}.svc.cluster.local
  port: 6379
  hbinterval: 5s
  hbmaxfail: 5
objstore:
  auth: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvprefix }}{{ . }}/{{ end }}{{ $ns }}/minio
  host: minio.{{ $ns }}.svc.cluster.local
  port: 9000
  sslmode: false
  location: us-east-1
  hbinterval: 5s
  hbmaxfail: 5
events:
  auth: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvprefix }}{{ . }}/{{ end }}{{ $ns }}/nats
  host: nats.{{ $ns }}.svc.cluster.local
  port: 4222
  hbinterval: 5s
  hbmaxfail: 3
  minpullduration: 100ms
  apisecret: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvprefix }}{{ . }}/{{ end }}{{ $ns }}/eventsapi
  apirefresh: 1m
template:
  dir: templates
mail:
  auth: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/smtp
  host: mailhog.{{ $ns }}.svc.cluster.local
  port: 1025
  msgiddomain: xorkevin.com
  returnpath: no-reply@mail.xorkevin.com
  fromaddress: no-reply@xorkevin.com
  fromname: Governor
  streamsize: 200M
  eventsize: 2K
  mailkey: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/mailkey
  hbinterval: 5s
  hbmaxfail: 6
  authrefresh: 1m
mailinglist:
  port: 2525
  authdomain: lists.governor.dev.localhost
  usrdomain: lists.governor.dev.localhost
  orgdomain: org.lists.governor.dev.localhost
  maxmsgsize: 2M
  readtimeout: 5s
  writetimeout: 5s
  streamsize: 200M
  eventsize: 2K
ratelimit:
  params:
    base:
      expiration: 60
      period: 15
      limit: 240
    auth:
      expiration: 60
      period: 15
      limit: 120
role:
  rolecacheduration: 24h
  streamsize: 200M
  eventsize: 2K
apikey:
  scopecache: 24h
token:
  tokensecret: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/token
  rsakey: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/rsakey
  issuer: http://governor.dev.localhost:8080
  audience: governor
  hbinterval: 5s
  hbmaxfail: 6
  keyrefresh: 1m
gate:
  realm: governor
user:
  streamsize: 200M
  eventsize: 2K
  accessduration: 5m
  refreshduration: 4380h
  refreshcache: 24h
  confirmduration: 24h
  emailconfirmduration: 24h
  passwordreset: true
  passwordresetduration: 24h
  passresetdelay: 0s
  invitationduration: 24h
  usercacheduration: 24h
  newloginemail: true
  passwordminsize: 8
  userapproval: false
  otpkey: {{ .Vars.vault.kvmount }}/data/{{ with .Vars.vault.kvappprefix }}{{ . }}/{{ end }}{{ $ns }}/{{ $svc }}/otpkey
  otpissuer: Governor
  rolesummary:
    - user
    - admin
    - usr.gov.user
    - mod.gov.user
    - usr.gov.oauth
    - mod.gov.oauth
    - usr.gov.ws
    - mod.gov.ws
  email:
    url:
      base: http://localhost:3000
      emailchange: /a/confirm/email?key={{`{{.Userid}}`}}.{{`{{.Key}}`}}
      forgotpass: /x/resetpass?key={{`{{.Userid}}`}}.{{`{{.Key}}`}}
      newuser: /x/confirm?userid={{`{{.Userid}}`}}&key={{`{{.Key}}`}}
  hbinterval: 5s
  hbmaxfail: 6
  otprefresh: 1m
  gcduration: 72h
oauth:
  codeduration: 1m
  accessduration: 5m
  refreshduration: 168h
  keycache: 24h
  realm: governor
  issuer: http://governor.dev.localhost:8080
  epauthorize: http://localhost:3000/oauth/auth
  ephost: http://governor.dev.localhost:8080
  epprofile: http://localhost:3000/u/{{`{{.Username}}`}}
  eppicture: http://localhost:3000/api/profile/id/{{`{{.Userid}}`}}/image
org:
  streamsize: 200M
  eventsize: 2K
courier:
  fallbacklink: http://governor.dev.localhost:8080
  linkprefix: http://go.governor.dev.localhost:8080
  cacheduration: 24h
conduit:
  streamsize: 200M
  eventsize: 2K
  invitationduration: 72h

// Code generated by go generate forge validation v0.3; DO NOT EDIT.

package oauth

func (r reqAppGet) valid() error {
	if err := validhasClientID(r.ClientID); err != nil {
		return err
	}
	return nil
}

func (r reqGetAppGroup) valid() error {
	if err := validoptUserid(r.CreatorID); err != nil {
		return err
	}
	if err := validAmount(r.Amount); err != nil {
		return err
	}
	if err := validOffset(r.Offset); err != nil {
		return err
	}
	return nil
}

func (r reqGetAppBulk) valid() error {
	if err := validhasClientIDs(r.ClientIDs); err != nil {
		return err
	}
	return nil
}

func (r reqAppPost) valid() error {
	if err := validName(r.Name); err != nil {
		return err
	}
	if err := validURL(r.URL); err != nil {
		return err
	}
	if err := validRedirect(r.RedirectURI); err != nil {
		return err
	}
	if err := validhasUserid(r.CreatorID); err != nil {
		return err
	}
	return nil
}

func (r reqAppPut) valid() error {
	if err := validhasClientID(r.ClientID); err != nil {
		return err
	}
	if err := validName(r.Name); err != nil {
		return err
	}
	if err := validURL(r.URL); err != nil {
		return err
	}
	if err := validRedirect(r.RedirectURI); err != nil {
		return err
	}
	return nil
}

func (r reqOAuthAuthorize) valid() error {
	if err := validhasUserid(r.Userid); err != nil {
		return err
	}
	if err := validhasClientID(r.ClientID); err != nil {
		return err
	}
	if err := validOidScope(r.Scope); err != nil {
		return err
	}
	if err := validOidNonce(r.Nonce); err != nil {
		return err
	}
	if err := validOidCodeChallenge(r.CodeChallenge); err != nil {
		return err
	}
	if err := validOidCodeChallengeMethod(r.CodeChallengeMethod); err != nil {
		return err
	}
	return nil
}

func (r reqOAuthTokenCode) valid() error {
	if err := validhasOidClientID(r.ClientID); err != nil {
		return err
	}
	if err := validhasOidClientSecret(r.ClientSecret); err != nil {
		return err
	}
	if err := validhasOidRedirect(r.RedirectURI); err != nil {
		return err
	}
	if err := validhasOidUserid(r.Userid); err != nil {
		return err
	}
	if err := validhasOidCode(r.Code); err != nil {
		return err
	}
	if err := validoptOidCodeVerifier(r.CodeVerifier); err != nil {
		return err
	}
	return nil
}

func (r reqGetConnectionGroup) valid() error {
	if err := validhasUserid(r.Userid); err != nil {
		return err
	}
	if err := validAmount(r.Amount); err != nil {
		return err
	}
	if err := validOffset(r.Offset); err != nil {
		return err
	}
	return nil
}

func (r reqGetConnection) valid() error {
	if err := validhasUserid(r.Userid); err != nil {
		return err
	}
	if err := validhasClientID(r.ClientID); err != nil {
		return err
	}
	return nil
}

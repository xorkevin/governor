// Code generated by go generate forge model v0.3; DO NOT EDIT.

package model

import (
	"database/sql"
	"fmt"
	"strings"
)

func serverModelSetup(db *sql.DB, tableName string) error {
	_, err := db.Exec("CREATE TABLE IF NOT EXISTS " + tableName + " (serverid VARCHAR(31) PRIMARY KEY, name VARCHAR(255) NOT NULL, desc VARCHAR(255), theme VARCHAR(4095) NOT NULL, creation_time BIGINT NOT NULL);")
	if err != nil {
		return err
	}
	return nil
}

func serverModelInsert(db *sql.DB, tableName string, m *Model) error {
	_, err := db.Exec("INSERT INTO "+tableName+" (serverid, name, desc, theme, creation_time) VALUES ($1, $2, $3, $4, $5);", m.ServerID, m.Name, m.Desc, m.Theme, m.CreationTime)
	if err != nil {
		return err
	}
	return nil
}

func serverModelInsertBulk(db *sql.DB, tableName string, models []*Model, allowConflict bool) error {
	conflictSQL := ""
	if allowConflict {
		conflictSQL = " ON CONFLICT DO NOTHING"
	}
	placeholders := make([]string, 0, len(models))
	args := make([]interface{}, 0, len(models)*5)
	for c, m := range models {
		n := c * 5
		placeholders = append(placeholders, fmt.Sprintf("($%d, $%d, $%d, $%d, $%d)", n+1, n+2, n+3, n+4, n+5))
		args = append(args, m.ServerID, m.Name, m.Desc, m.Theme, m.CreationTime)
	}
	_, err := db.Exec("INSERT INTO "+tableName+" (serverid, name, desc, theme, creation_time) VALUES "+strings.Join(placeholders, ", ")+conflictSQL+";", args...)
	if err != nil {
		return err
	}
	return nil
}

func serverModelGetModelEqServerID(db *sql.DB, tableName string, serverid string) (*Model, error) {
	m := &Model{}
	if err := db.QueryRow("SELECT serverid, name, desc, theme, creation_time FROM "+tableName+" WHERE serverid = $1;", serverid).Scan(&m.ServerID, &m.Name, &m.Desc, &m.Theme, &m.CreationTime); err != nil {
		return nil, err
	}
	return m, nil
}

func serverModelUpdModelEqServerID(db *sql.DB, tableName string, m *Model, serverid string) error {
	_, err := db.Exec("UPDATE "+tableName+" SET (serverid, name, desc, theme, creation_time) = ROW($1, $2, $3, $4, $5) WHERE serverid = $6;", m.ServerID, m.Name, m.Desc, m.Theme, m.CreationTime, serverid)
	if err != nil {
		return err
	}
	return nil
}

func serverModelDelEqServerID(db *sql.DB, tableName string, serverid string) error {
	_, err := db.Exec("DELETE FROM "+tableName+" WHERE serverid = $1;", serverid)
	return err
}

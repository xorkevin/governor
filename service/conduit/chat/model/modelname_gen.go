// Code generated by go generate forge model v0.3; DO NOT EDIT.

package model

import (
	"database/sql"
	"fmt"
	"strings"
)

func nameModelSetup(db *sql.DB, tableName string) error {
	_, err := db.Exec("CREATE TABLE IF NOT EXISTS " + tableName + " (userid VARCHAR(31) PRIMARY KEY, username VARCHAR(255) NOT NULL);")
	if err != nil {
		return err
	}
	return nil
}

func nameModelInsert(db *sql.DB, tableName string, m *NameModel) error {
	_, err := db.Exec("INSERT INTO "+tableName+" (userid, username) VALUES ($1, $2);", m.Userid, m.Username)
	if err != nil {
		return err
	}
	return nil
}

func nameModelInsertBulk(db *sql.DB, tableName string, models []*NameModel, allowConflict bool) error {
	conflictSQL := ""
	if allowConflict {
		conflictSQL = " ON CONFLICT DO NOTHING"
	}
	placeholders := make([]string, 0, len(models))
	args := make([]interface{}, 0, len(models)*2)
	for c, m := range models {
		n := c * 2
		placeholders = append(placeholders, fmt.Sprintf("($%d, $%d)", n+1, n+2))
		args = append(args, m.Userid, m.Username)
	}
	_, err := db.Exec("INSERT INTO "+tableName+" (userid, username) VALUES "+strings.Join(placeholders, ", ")+conflictSQL+";", args...)
	if err != nil {
		return err
	}
	return nil
}

func nameModelUpdNameModelEqUserid(db *sql.DB, tableName string, m *NameModel, userid string) error {
	_, err := db.Exec("UPDATE "+tableName+" SET (userid, username) = ROW($1, $2) WHERE userid = $3;", m.Userid, m.Username, userid)
	if err != nil {
		return err
	}
	return nil
}

func nameModelDelEqUserid(db *sql.DB, tableName string, userid string) error {
	_, err := db.Exec("DELETE FROM "+tableName+" WHERE userid = $1;", userid)
	return err
}

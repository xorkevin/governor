// Code generated by go generate forge model v0.3; DO NOT EDIT.

package model

import (
	"database/sql"
	"fmt"
	"strings"
)

const (
	sentmsgModelTableName = "mailinglistsentmsgs"
)

func sentmsgModelSetup(db *sql.DB) error {
	_, err := db.Exec("CREATE TABLE IF NOT EXISTS mailinglistsentmsgs (userid VARCHAR(31), msgid VARCHAR(1023), PRIMARY KEY (userid, msgid), sent_time BIGINT NOT NULL);")
	if err != nil {
		return err
	}
	return nil
}

func sentmsgModelInsert(db *sql.DB, m *SentMsgModel) error {
	_, err := db.Exec("INSERT INTO mailinglistsentmsgs (userid, msgid, sent_time) VALUES ($1, $2, $3);", m.Userid, m.Msgid, m.SentTime)
	if err != nil {
		return err
	}
	return nil
}

func sentmsgModelInsertBulk(db *sql.DB, models []*SentMsgModel, allowConflict bool) error {
	conflictSQL := ""
	if allowConflict {
		conflictSQL = " ON CONFLICT DO NOTHING"
	}
	placeholders := make([]string, 0, len(models))
	args := make([]interface{}, 0, len(models)*3)
	for c, m := range models {
		n := c * 3
		placeholders = append(placeholders, fmt.Sprintf("($%d, $%d, $%d)", n+1, n+2, n+3))
		args = append(args, m.Userid, m.Msgid, m.SentTime)
	}
	_, err := db.Exec("INSERT INTO mailinglistsentmsgs (userid, msgid, sent_time) VALUES "+strings.Join(placeholders, ", ")+conflictSQL+";", args...)
	if err != nil {
		return err
	}
	return nil
}

// Code generated by go generate forge model v0.3; DO NOT EDIT.

package model

import (
	"database/sql"
	"fmt"
	"strings"
)

func sentmsgModelSetup(db *sql.DB, tableName string) error {
	_, err := db.Exec("CREATE TABLE IF NOT EXISTS " + tableName + " (listid VARCHAR(255), msgid VARCHAR(1023), userid VARCHAR(31), PRIMARY KEY (listid, msgid, userid), sent_time BIGINT NOT NULL);")
	if err != nil {
		return err
	}
	_, err = db.Exec("CREATE INDEX IF NOT EXISTS " + tableName + "_listid__userid__msgid_index ON " + tableName + " (listid, userid, msgid);")
	if err != nil {
		return err
	}
	return nil
}

func sentmsgModelInsert(db *sql.DB, tableName string, m *SentMsgModel) error {
	_, err := db.Exec("INSERT INTO "+tableName+" (listid, msgid, userid, sent_time) VALUES ($1, $2, $3, $4);", m.ListID, m.Msgid, m.Userid, m.SentTime)
	if err != nil {
		return err
	}
	return nil
}

func sentmsgModelInsertBulk(db *sql.DB, tableName string, models []*SentMsgModel, allowConflict bool) error {
	conflictSQL := ""
	if allowConflict {
		conflictSQL = " ON CONFLICT DO NOTHING"
	}
	placeholders := make([]string, 0, len(models))
	args := make([]interface{}, 0, len(models)*4)
	for c, m := range models {
		n := c * 4
		placeholders = append(placeholders, fmt.Sprintf("($%d, $%d, $%d, $%d)", n+1, n+2, n+3, n+4))
		args = append(args, m.ListID, m.Msgid, m.Userid, m.SentTime)
	}
	_, err := db.Exec("INSERT INTO "+tableName+" (listid, msgid, userid, sent_time) VALUES "+strings.Join(placeholders, ", ")+conflictSQL+";", args...)
	if err != nil {
		return err
	}
	return nil
}

func sentmsgModelDelEqListIDHasMsgid(db *sql.DB, tableName string, listid string, msgid []string) error {
	paramCount := 1
	args := make([]interface{}, 0, paramCount+len(msgid))
	args = append(args, listid)
	var placeholdersmsgid string
	{
		placeholders := make([]string, 0, len(msgid))
		for _, i := range msgid {
			paramCount++
			placeholders = append(placeholders, fmt.Sprintf("($%d)", paramCount))
			args = append(args, i)
		}
		placeholdersmsgid = strings.Join(placeholders, ", ")
	}
	_, err := db.Exec("DELETE FROM "+tableName+" WHERE listid = $1 AND msgid IN (VALUES "+placeholdersmsgid+");", args...)
	return err
}
